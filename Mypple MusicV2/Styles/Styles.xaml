<!--
    This code was generated by a tool.

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:control="clr-namespace:Mypple_MusicV2.CustomControls">
	<FontFamily x:Key="IconFont">pack://application:,,,/Mypple MusicV2;component/Resources/#iconfont</FontFamily>
	<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WindowDefaultStyleKey" TargetType="{x:Type Window}">
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<!--  CornerRadius必须设置为0，否则在win7上，界面上方两侧外边框无法闭合  -->
				<WindowChrome CornerRadius="0" CaptionHeight="60" GlassFrameThickness="-1" ResizeBorderThickness="5" UseAeroCaptionButtons="False" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" UseLayoutRounding="True">
						<AdornerDecorator>
							<ContentPresenter ClipToBounds="True" />
						</AdornerDecorator>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="WindowState" Value="Maximized">
				<Setter Property="BorderThickness" Value="8" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="FlatIconButtonStyle" TargetType="Button">
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border CornerRadius="{DynamicResource DefaultCornerRadius}" Background="{TemplateBinding Background}">
						<ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#33000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="#44000000" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="MusicProcessSliderThumb" TargetType="{x:Type Thumb}">
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Value="{StaticResource EffectShadow2}" Property="UIElement.Effect" />
			</Trigger>
			<EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
				<EventTrigger.Actions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation To="2" Duration="0:0:.1" Storyboard.TargetName="BorderDot" Storyboard.TargetProperty="BorderThickness" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger.Actions>
			</EventTrigger>
			<EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
				<EventTrigger.Actions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation To="0" Duration="0:0:.1" Storyboard.TargetName="BorderDot" Storyboard.TargetProperty="BorderThickness" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger.Actions>
			</EventTrigger>
		</ControlTemplate.Triggers>
		<hc:AxleCanvas>
			<Border Name="BorderDot" Effect="{StaticResource EffectShadow1}" BorderThickness="0" BorderBrush="{DynamicResource PrimaryBrush}" Width="12" Height="12" Background="White" CornerRadius="6" />
		</hc:AxleCanvas>
	</ControlTemplate>
	<ControlTemplate x:Key="MusicProgressSliderHorizontal" TargetType="Slider">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<!--<TickBar x:Name="TopTick"
                     Fill="{TemplateBinding Foreground}"
                     Height="4"
                     Margin="0,0,0,2"
                     Placement="Top"
                     Grid.Row="0"
                     Visibility="Collapsed" />
            <TickBar x:Name="BottomTick"
                     Fill="{TemplateBinding Foreground}"
                     Height="4"
                     Margin="0,2,0,0"
                     Placement="Bottom"
                     Grid.Row="2"
                     Visibility="Collapsed" />-->
			<Border x:Name="TrackBackground" Background="{TemplateBinding Background}" Grid.Row="1" Height="2" VerticalAlignment="center" Margin="9,0">
				<Canvas x:Name="Canvas_SelectionRange" Visibility="Hidden">
					<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource AccentBrush}" Height="2" />
				</Canvas>
			</Border>
			<Track Margin="9,0" x:Name="PART_Track" Grid.Row="1">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Background="{DynamicResource PrimaryBrush}" Style="{StaticResource SliderRepeatButtonHorizontalStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonHorizontalStyle}" />
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb ClipToBounds="False" Width="12" Margin="-6,0" Height="12" x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource MusicProcessSliderThumb}" VerticalAlignment="Center" />
				</Track.Thumb>
			</Track>
		</Grid>
		<!--<ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="hc:TipElement.Placement"
                               Value="Top" />
                    <Condition Property="hc:TipElement.Visibility"
                               Value="Visible" />
                </MultiTrigger.Conditions>
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource TipSliderThumbHorizontalTop}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="hc:TipElement.Placement"
                               Value="Bottom" />
                    <Condition Property="hc:TipElement.Visibility"
                               Value="Visible" />
                </MultiTrigger.Conditions>
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource TipSliderThumbHorizontalBottom}" />
            </MultiTrigger>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="Canvas_SelectionRange"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>-->
	</ControlTemplate>
	<Style x:Key="MusicProgressStyle" BasedOn="{StaticResource BaseStyle}" TargetType="Slider">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
		<Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource DarkPrimaryBrush}" />
		<Setter Property="Template" Value="{StaticResource MusicProgressSliderHorizontal}" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value=".4" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Width" Value="50" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="borderIn" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource DefaultCornerRadius}">
						<TextBlock x:Name="Content" HorizontalAlignment="Center" FontFamily="{StaticResource IconFont}" Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Content}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#22000000" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="#33000000" />
							<Setter TargetName="Content" Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Tag}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationExpandCollapseToggleStyle" TargetType="ToggleButton">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Background="Transparent" Height="16" Padding="4" Width="16">
						<Path x:Name="ExpandPath" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Data="{StaticResource DownGeometry}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
							<Path.RenderTransform>
								<RotateTransform Angle="0" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationItemStyle" BasedOn="{StaticResource BaseStyle}" TargetType="TreeViewItem">
		<Setter Property="IsSelected" Value="{Binding IsNavigated}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="10,0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
		<Setter Property="Margin" Value="0,0,0,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition MinHeight="{TemplateBinding MinHeight}" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="Bd" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<DockPanel LastChildFill="False" Margin="{Binding Converter={StaticResource TreeViewItemMarginConverter}, RelativeSource={RelativeSource TemplatedParent}}">
								<Border x:Name="SelectionBorder" Width="4" Height="0" DockPanel.Dock="Left" CornerRadius="{DynamicResource DefaultCornerRadius}" Background="{DynamicResource PrimaryBrush}" Margin="-4 0 0 0" Visibility="{TemplateBinding HasItems,Converter={StaticResource Boolean2VisibilityReConverter}}" />
								<ContentPresenter VerticalAlignment="Center" x:Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource NavigationExpandCollapseToggleStyle}" DockPanel.Dock="Right" />
								<Button x:Name="FuncButton" Content="" FontSize="15" Width="35" Height="25" DockPanel.Dock="Right" Style="{StaticResource FlatIconButtonStyle}" Margin="0 2" />
							</DockPanel>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true" SourceName="Bd">
							<Setter Property="Background" TargetName="Bd" Value="#22000000" />
						</Trigger>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
							<Setter Property="Visibility" TargetName="FuncButton" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="#22000000" />
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="0" To="20" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="20" To="0" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value=".4" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationBarStyle" TargetType="TreeView" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource NavigationItemStyle}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="2,2,2,0" />
		<Setter Property="hc:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeView">
					<Border x:Name="Bd" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
						<hc:ToggleBlock IsChecked="{Binding HasItems,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
							<hc:ToggleBlock.CheckedContent>
								<hc:ScrollViewer IsInertiaEnabled="{Binding Path=(hc:ScrollViewer.IsInertiaEnabled),RelativeSource={RelativeSource TemplatedParent}}" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
									<ItemsPresenter />
								</hc:ScrollViewer>
							</hc:ToggleBlock.CheckedContent>
							<hc:ToggleBlock.UnCheckedContent>
								<hc:Empty />
							</hc:ToggleBlock.UnCheckedContent>
						</hc:ToggleBlock>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VolumeSliderStyle" TargetType="{x:Type Slider}">
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Slider}">
							<Border x:Name="border">
								<Track x:Name="PART_Track" Grid.Column="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton x:Name="RepeatButton1" Command="{x:Static Slider.DecreaseLarge}" Width="5" Background="{DynamicResource PrimaryBrush}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton x:Name="RepeatButton2" Command="{x:Static Slider.IncreaseLarge}" Width="5" Background="LightGray" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb x:Name="Thumb" Focusable="False" Height="20" Width="20" OverridesDefaultStyle="True" Background="{DynamicResource PrimaryBrush}" VerticalAlignment="Top">
											<Thumb.Template>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
														<Border x:Name="borderOut" Background="White" CornerRadius="50" Width="20" Height="20" BorderBrush="#E9E9E9" BorderThickness="1" />
														<Border x:Name="borderIn" Background="{TemplateBinding Background}" CornerRadius="50" Width="10" Height="10" BorderBrush="#E9E9E9" BorderThickness="1" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="true">
															<Setter Property="Opacity" TargetName="borderIn" Value="0.5" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Thumb.Template>
										</Thumb>
									</Track.Thumb>
								</Track>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="control:VolumeControl">
		<Setter Property="Width" Value="50" />
		<Setter Property="Height" Value="40" />
		<Setter Property="ToolTip" Value="音量" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="control:VolumeControl">
					<Border Background="{TemplateBinding Background}" CornerRadius="{DynamicResource DefaultCornerRadius}">
						<Grid>
							<TextBlock x:Name="Content" HorizontalAlignment="Center" FontFamily="{StaticResource IconFont}" Text="" FontSize="21" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" />
							<Popup x:Name="VolumePopupContrainer" IsOpen="{Binding RelativeSource={RelativeSource AncestorType=control:VolumeControl},Path=IsChecked}" StaysOpen="False" Placement="Bottom" AllowsTransparency="True">
								<StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">
									<Border Background="{DynamicResource BackgroundBrush}" Height="140" Width="35" CornerRadius="{DynamicResource DefaultCornerRadius}" Margin="10">
										<Border.Effect>
											<DropShadowEffect Color="{DynamicResource EffectShadowColor}" ShadowDepth="0" BlurRadius="10" Opacity="0.6" Direction="0" />
										</Border.Effect>
										<Slider Style="{DynamicResource VolumeSliderStyle}" x:Name="VolumeProgress" Value="{Binding RelativeSource={RelativeSource AncestorType=control:VolumeControl},Path=VolumeValue}" Minimum="0" Maximum="1" Width="30" Margin="0 10" IsMoveToPointEnabled="True" Cursor="Hand" Orientation="Vertical" />
									</Border>
								</StackPanel>
							</Popup>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#22000000" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="0">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="1">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="2">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="3">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>