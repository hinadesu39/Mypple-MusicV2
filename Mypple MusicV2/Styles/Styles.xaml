<!--
    This code was generated by a tool.

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:control="clr-namespace:Mypple_MusicV2.CustomControls" xmlns:system="clr-namespace:System;assembly=mscorlib">
	<FontFamily x:Key="IconFont">pack://application:,,,/Mypple MusicV2;component/Resources/#iconfont</FontFamily>
	<ItemsPanelTemplate x:Key="PlayListBoxItemsPanel">
		<WrapPanel />
	</ItemsPanelTemplate>
	<DataTemplate x:Key="MusicListBoxItemTemplate" DataType="ListBoxItem">
		<DockPanel Height="40" LastChildFill="False">
			<TextBlock Text="{Binding Title}" VerticalAlignment="Center" />
			<TextBlock Text="{Binding Duration,Converter={StaticResource Double2TimeSpan}}" DockPanel.Dock="Right" VerticalAlignment="Center" />
		</DockPanel>
	</DataTemplate>
	<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WindowDefaultStyleKey" TargetType="{x:Type Window}">
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<!--  CornerRadius必须设置为0，否则在win7上，界面上方两侧外边框无法闭合  -->
				<WindowChrome CornerRadius="0" CaptionHeight="60" GlassFrameThickness="-1" ResizeBorderThickness="5" UseAeroCaptionButtons="False" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" UseLayoutRounding="True">
						<AdornerDecorator>
							<ContentPresenter ClipToBounds="True" />
						</AdornerDecorator>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="WindowState" Value="Maximized">
				<Setter Property="BorderThickness" Value="8" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="FlatIconButtonStyle" TargetType="Button">
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="hc:BorderElement.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}" Background="{TemplateBinding Background}">
						<ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#33000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="#44000000" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="FlatTextButtonStyle" TargetType="Button">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="22" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="hc:BorderElement.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}" Background="{TemplateBinding Background}">
						<DockPanel LastChildFill="False">
							<ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
							<TextBlock Text="" DockPanel.Dock="Right" VerticalAlignment="Center" FontSize="16" FontWeight="Thin" Foreground="{DynamicResource SecondaryTextBrush}" />
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="FlatCornerButtonStyle" TargetType="Button">
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="40" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Background" Value="#33000000" />
		<Setter Property="hc:BorderElement.CornerRadius" Value="80" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}" Background="{TemplateBinding Background}">
						<ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="#44000000" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="GoBackButtonStyle" TargetType="Button">
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="ToolTip" Value="返回" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border CornerRadius="{DynamicResource DefaultCornerRadius}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<ContentPresenter Content="" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#33000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="#44000000" />
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation Storyboard.TargetProperty="Padding" From="15 0 0 0" To="0" Duration="0:0:0.3">
								<ThicknessAnimation.EasingFunction>
									<QuadraticEase EasingMode="EaseInOut" />
								</ThicknessAnimation.EasingFunction>
							</ThicknessAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</Style.Triggers>
	</Style>
	<DataTemplate x:Key="ArtistListBoxItemTemplate" DataType="ListBoxItem">
		<StackPanel Height="50" Background="Transparent" Orientation="Horizontal">
			<Grid>
				<Border Width="40" Height="40" Background="LightGray" CornerRadius="20">
					<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource IconFont}" FontSize="24" FontWeight="ExtraBold" Foreground="#33000000" Text="" />
				</Border>
				<Image Width="40" Height="40" RenderOptions.BitmapScalingMode="Fant" Source="{Binding LocalPicUrl}">
					<Image.Clip>
						<RectangleGeometry RadiusX="40" RadiusY="40" Rect="0,0,40,40" />
					</Image.Clip>
				</Image>
			</Grid>
			<TextBlock Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Name}" />
		</StackPanel>
	</DataTemplate>
	<Style x:Key="PlayListBoxItemContainerStyle" TargetType="ListBoxItem">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<StackPanel Width="220" Height="260" Margin="0,20,0,0">
						<Grid>
							<!--  图片不存在时默认展示  -->
							<Border Width="200" Height="200" Margin="5,5,5,0" Background="LightGray" CornerRadius="5">
								<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource IconFont}" FontSize="80" FontWeight="ExtraBold" Foreground="#33000000" Text="" />
							</Border>
							<Image Width="200" Height="200" Margin="5,5,5,0" RenderOptions.BitmapScalingMode="Fant" Source="{Binding LocalPicUrl}">
								<Image.Clip>
									<RectangleGeometry RadiusX="5" RadiusY="5" Rect="0,0,200,200" />
								</Image.Clip>
							</Image>
							<Rectangle x:Name="background" Width="200" Height="200" Margin="5,5,5,0" Fill="#44000000" RadiusX="5" RadiusY="5" Visibility="Hidden" />
							<Button x:Name="playButton" Margin="20,10,10,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Command="{Binding DataContext.PlayAlbumCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" Content="" Style="{StaticResource FlatCornerButtonStyle}" Visibility="Hidden" />
							<Button x:Name="infoButton" Margin="10,10,20,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Command="{Binding DataContext.SettingAlbumCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" Content="" Style="{StaticResource FlatCornerButtonStyle}" Visibility="Hidden" />
						</Grid>
						<TextBlock Margin="10,0,0,0" FontSize="15" Foreground="{DynamicResource DefaultForgeground}" Text="{Binding Title}" TextWrapping="Wrap" />
						<TextBlock Margin="10,0,0,0" FontSize="12" Foreground="#7E7E7E" Text="{Binding Artist}" TextWrapping="Wrap" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="background" Property="Visibility" Value="Visible" />
							<Setter TargetName="infoButton" Property="Visibility" Value="Visible" />
							<Setter TargetName="playButton" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PlayListBoxStyle" BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="ItemsPanel" Value="{StaticResource PlayListBoxItemsPanel}" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource PlayListBoxItemContainerStyle}" />
		<Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="True" />
	</Style>
	<Style x:Key="FlatListBoxItemContainerStyle" BasedOn="{StaticResource BaseStyle}" TargetType="ListBoxItem">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="10,0" />
		<Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="0,0,0,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="true">
						<DockPanel>
							<Border x:Name="SelectionBorder" Width="4" Height="0" Margin="-16,0,0,0" Background="{DynamicResource PrimaryBrush}" CornerRadius="{DynamicResource DefaultCornerRadius}" DockPanel.Dock="Left" />
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="Bd" Property="IsMouseOver" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="#10000000" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="#10000000" />
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="0" To="20" Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="20" To="0" Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true" />
					<Condition Property="Selector.IsSelectionActive" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Opacity" Value=".4" />
			</Trigger>
			<Trigger Property="hc:EdgeElement.ShowEdgeContent" Value="true">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ListBoxItem">
							<Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
								<StackPanel Orientation="Horizontal">
									<ContentControl Width="16" Height="16" Content="{Binding Path=(hc:EdgeElement.LeftContent), RelativeSource={RelativeSource TemplatedParent}}" />
									<ContentPresenter Margin="6,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</StackPanel>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="FlatListBoxStyle" BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource FlatListBoxItemContainerStyle}" />
		<Setter Property="ItemTemplate" Value="{StaticResource ArtistListBoxItemTemplate}" />
		<Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="True" />
		<Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
		<Setter Property="AlternationCount" Value="2" />
	</Style>
	<Style x:Key="MusicListBoxItemContainerStyle" TargetType="ListBoxItem" BasedOn="{StaticResource FlatListBoxItemContainerStyle}">
		<Style.Triggers>
			<Trigger Property="ItemsControl.AlternationIndex" Value="0">
				<Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
			</Trigger>
			<Trigger Property="ItemsControl.AlternationIndex" Value="1">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="AlbumListBoxItemContainerStyle" BasedOn="{StaticResource BaseStyle}" TargetType="ListBoxItem">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0,0,0,2" />
		<Setter Property="Width" Value="auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="MusicProcessSliderThumb" TargetType="{x:Type Thumb}">
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Value="{StaticResource EffectShadow2}" Property="UIElement.Effect" />
			</Trigger>
			<EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
				<EventTrigger.Actions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation To="2" Duration="0:0:.1" Storyboard.TargetName="BorderDot" Storyboard.TargetProperty="BorderThickness" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger.Actions>
			</EventTrigger>
			<EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
				<EventTrigger.Actions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation To="0" Duration="0:0:.1" Storyboard.TargetName="BorderDot" Storyboard.TargetProperty="BorderThickness" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger.Actions>
			</EventTrigger>
		</ControlTemplate.Triggers>
		<hc:AxleCanvas>
			<Border Name="BorderDot" Effect="{StaticResource EffectShadow1}" BorderThickness="0" BorderBrush="{DynamicResource PrimaryBrush}" Width="12" Height="12" Background="White" CornerRadius="6" />
		</hc:AxleCanvas>
	</ControlTemplate>
	<ControlTemplate x:Key="MusicProgressSliderHorizontal" TargetType="Slider">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Border x:Name="TrackBackground" Background="{TemplateBinding Background}" Grid.Row="1" Height="2" VerticalAlignment="center" Margin="9,0">
				<Canvas x:Name="Canvas_SelectionRange" Visibility="Hidden">
					<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource AccentBrush}" Height="2" />
				</Canvas>
			</Border>
			<Track Margin="9,0" x:Name="PART_Track" Grid.Row="1">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Background="{DynamicResource PrimaryBrush}" Style="{StaticResource SliderRepeatButtonHorizontalStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonHorizontalStyle}" />
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb ClipToBounds="False" Width="12" Margin="-6,0" Height="12" x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource MusicProcessSliderThumb}" VerticalAlignment="Center" />
				</Track.Thumb>
			</Track>
		</Grid>
	</ControlTemplate>
	<Style x:Key="MusicProgressStyle" BasedOn="{StaticResource BaseStyle}" TargetType="Slider">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
		<Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource DarkPrimaryBrush}" />
		<Setter Property="Template" Value="{StaticResource MusicProgressSliderHorizontal}" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value=".4" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="FlatToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="borderIn" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource DefaultCornerRadius}">
						<TextBlock x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource IconFont}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Content}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Content" Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Tag}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Width" Value="50" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="borderIn" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource DefaultCornerRadius}">
						<TextBlock x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{StaticResource IconFont}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Content}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#22000000" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="#33000000" />
							<Setter TargetName="Content" Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Tag}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="UserToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="Width" Value="240" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="borderIn" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource DefaultCornerRadius}">
						<StackPanel Orientation="Horizontal">
							<Border Width="32" Height="32" Margin="10,0,0,0" Background="#22000000" CornerRadius="32">
								<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Text="" />
							</Border>
							<TextBlock x:Name="Content" Margin="10,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Content}" />
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#22000000" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="#33000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationExpandCollapseToggleStyle" TargetType="ToggleButton">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Width="16" Height="16" Padding="4" Background="Transparent">
						<Path x:Name="ExpandPath" Data="{StaticResource DownGeometry}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
							<Path.RenderTransform>
								<RotateTransform Angle="0" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="ExpandPath" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationItemStyle" BasedOn="{StaticResource BaseStyle}" TargetType="TreeViewItem">
		<Setter Property="IsSelected" Value="{Binding IsNavigated}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="10,0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
		<Setter Property="Margin" Value="0,0,0,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition MinHeight="{TemplateBinding MinHeight}" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="true">
							<DockPanel Margin="{Binding Converter={StaticResource TreeViewItemMarginConverter}, RelativeSource={RelativeSource TemplatedParent}}" LastChildFill="False">
								<Border x:Name="SelectionBorder" Width="4" Height="0" Margin="-4,0,0,0" Background="{DynamicResource PrimaryBrush}" CornerRadius="{DynamicResource DefaultCornerRadius}" DockPanel.Dock="Left" Visibility="{TemplateBinding HasItems,&#xD;&#xA;                                                                 Converter={StaticResource Boolean2VisibilityReConverter}}" />
								<ContentPresenter x:Name="PART_Header" VerticalAlignment="Center" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ToggleButton x:Name="Expander" ClickMode="Press" DockPanel.Dock="Right" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource NavigationExpandCollapseToggleStyle}" />
								<Button x:Name="FuncButton" Width="35" Height="25" Margin="0,2" Content="" DockPanel.Dock="Right" FontSize="15" Style="{StaticResource FlatIconButtonStyle}" />
							</DockPanel>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="Bd" Property="IsMouseOver" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="#22000000" />
						</Trigger>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
							<Setter TargetName="FuncButton" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="#22000000" />
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="0" To="20" Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="20" To="0" Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value=".4" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationBarStyle" BasedOn="{StaticResource TreeViewBaseStyle}" TargetType="TreeView">
		<Setter Property="ItemContainerStyle" Value="{StaticResource NavigationItemStyle}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
	</Style>
	<Style x:Key="VolumeSliderStyle" TargetType="{x:Type Slider}">
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Slider}">
							<Border x:Name="border">
								<Track x:Name="PART_Track" Grid.Column="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton x:Name="RepeatButton1" Command="{x:Static Slider.DecreaseLarge}" Width="5" Background="{DynamicResource PrimaryBrush}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton x:Name="RepeatButton2" Command="{x:Static Slider.IncreaseLarge}" Width="5" Background="LightGray" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb x:Name="Thumb" Focusable="False" Height="20" Width="20" OverridesDefaultStyle="True" Background="{DynamicResource PrimaryBrush}" VerticalAlignment="Top">
											<Thumb.Template>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
														<Border x:Name="borderOut" Background="White" CornerRadius="50" Width="20" Height="20" BorderBrush="#E9E9E9" BorderThickness="1" />
														<Border x:Name="borderIn" Background="{TemplateBinding Background}" CornerRadius="50" Width="10" Height="10" BorderBrush="#E9E9E9" BorderThickness="1" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="true">
															<Setter Property="Opacity" TargetName="borderIn" Value="0.5" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Thumb.Template>
										</Thumb>
									</Track.Thumb>
								</Track>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="control:VolumeControl">
		<Setter Property="Width" Value="50" />
		<Setter Property="Height" Value="40" />
		<Setter Property="ToolTip" Value="音量" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="control:VolumeControl">
					<Border Background="{TemplateBinding Background}" CornerRadius="{DynamicResource DefaultCornerRadius}">
						<Grid>
							<TextBlock x:Name="Content" HorizontalAlignment="Center" FontFamily="{StaticResource IconFont}" Text="" FontSize="21" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" />
							<Popup x:Name="VolumePopupContrainer" IsOpen="{Binding RelativeSource={RelativeSource AncestorType=control:VolumeControl},Path=IsChecked}" StaysOpen="False" Placement="Bottom" AllowsTransparency="True">
								<!--<StackPanel HorizontalAlignment="Center"
                                            VerticalAlignment="Top">-->
								<Border Background="{DynamicResource BackgroundBrush}" Height="140" Width="35" CornerRadius="{DynamicResource DefaultCornerRadius}" Margin="10">
									<Border.Effect>
										<DropShadowEffect Color="{DynamicResource EffectShadowColor}" ShadowDepth="0" BlurRadius="10" Opacity="0.6" Direction="0" />
									</Border.Effect>
									<Slider Style="{DynamicResource VolumeSliderStyle}" x:Name="VolumeProgress" Value="{Binding RelativeSource={RelativeSource AncestorType=control:VolumeControl},Path=VolumeValue}" Minimum="0" Maximum="1" Width="30" Margin="0 10" IsMoveToPointEnabled="True" Cursor="Hand" Orientation="Vertical" />
								</Border>
								<!--</StackPanel>-->
							</Popup>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#22000000" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="0">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="1">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="2">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=VolumeValue,Converter={StaticResource VolumeValue2State}}" Value="3">
							<Setter TargetName="Content" Property="Text" Value="" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="FlatRadioButtonStyle" TargetType="RadioButton">
		<Setter Property="Width" Value="150" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource IconFont}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Border CornerRadius="{DynamicResource DefaultCornerRadius}" Background="{TemplateBinding Background}">
						<ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsChecked" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#33000000" />
						</MultiTrigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Foreground" Value="White" />
							<Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MusicDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="Padding" Value="12,0" />
		<Setter Property="BorderThickness" Value="0 0 0 1" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridColumnHeader">
					<hc:SimplePanel>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Padding="{TemplateBinding Padding}">
							<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ToggleButton Grid.Column="1" VerticalAlignment="Center" Height="{x:Static system:Double.NaN}" Padding="4,0" Width="20" IsEnabled="False" Opacity="1" Foreground="{DynamicResource PrimaryBrush}" x:Name="ToggleButtonSortDirection" Style="{StaticResource ToggleButtonIconTransparent}" hc:IconSwitchElement.Geometry="{StaticResource DownGeometry}" hc:IconSwitchElement.GeometrySelected="{StaticResource UpGeometry}" />
							</Grid>
						</Border>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
						<Thumb x:Name="PART_RightHeaderGripper" Background="{DynamicResource BorderBrush}" HorizontalAlignment="Right" Width="2" Style="{StaticResource ColumnHeaderGripperStyle}" />
					</hc:SimplePanel>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ToggleButtonSortDirection" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter Property="IsChecked" Value="True" TargetName="ToggleButtonSortDirection" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter Property="IsChecked" Value="False" TargetName="ToggleButtonSortDirection" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="SortDirection" Value="Ascending">
				<Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
			</Trigger>
			<Trigger Property="SortDirection" Value="Descending">
				<Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MusicDataGridRowStyle" TargetType="DataGridRow">
		<Setter Property="Background" Value="{DynamicResource RegionBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="Margin" Value="0,0,0,4" />
		<Setter Property="Padding" Value="0,6" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridRow">
					<SelectiveScrollingGrid>
						<SelectiveScrollingGrid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</SelectiveScrollingGrid.ColumnDefinitions>
						<SelectiveScrollingGrid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</SelectiveScrollingGrid.RowDefinitions>
						<Border CornerRadius="4" Grid.ColumnSpan="2" x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
						<DataGridCellsPresenter MinHeight="{TemplateBinding MinHeight}" VerticalContentAlignment="Center" Grid.Row="0" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}" Visibility="{TemplateBinding DetailsVisibility}" />
						<DataGridRowHeader Grid.Row="0" Grid.Column="0" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
						<Border x:Name="SelectionBorder" Grid.Row="0" Grid.Column="0" Width="4" Height="0" CornerRadius="{DynamicResource DefaultCornerRadius}" Background="{DynamicResource PrimaryBrush}" />
					</SelectiveScrollingGrid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="0" To="20" Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectionBorder" Storyboard.TargetProperty="Height" From="20" To="0" Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="AlternationIndex" Value="0">
				<Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
			</Trigger>
			<Trigger Property="AlternationIndex" Value="1">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" Value="#22000000" />
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="#22000000" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource TextIconBrush}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true" />
					<Condition Property="Selector.IsSelectionActive" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MusicDataGridStyle" TargetType="{x:Type DataGrid}">
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ItemsControl.IsGrouping" Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</MultiTrigger>
		</Style.Triggers>
		<Setter Property="AlternationCount" Value="2" />
		<Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="DataGrid.GridLinesVisibility" Value="None" />
		<Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="DataGrid.EnableRowVirtualization" Value="True" />
		<Setter Property="DataGrid.CanUserAddRows" Value="False" />
		<Setter Property="DataGrid.CanUserDeleteRows" Value="False" />
		<Setter Property="DataGrid.CanUserReorderColumns" Value="False" />
		<Setter Property="DataGrid.CanUserResizeRows" Value="False" />
		<Setter Property="DataGrid.RowStyle" Value="{StaticResource MusicDataGridRowStyle}" />
		<Setter Property="DataGrid.ColumnHeaderStyle" Value="{StaticResource MusicDataGridColumnHeaderStyle}" />
		<Setter Property="DataGrid.RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}" />
		<Setter Property="DataGrid.CellStyle" Value="{StaticResource DataGridCellStyle}" />
		<!--<Setter Property="Padding"
                Value="6 0" />-->
		<Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="DataGrid.RowHeight" Value="52" />
		<Setter Property="DataGrid.ColumnHeaderHeight" Value="44" />
		<Setter Property="hc:DataGridAttach.TextColumnStyle" Value="{StaticResource DataGridTextColumnStyle}" />
		<Setter Property="hc:DataGridAttach.EditingTextColumnStyle" Value="{StaticResource DataGridEditingTextColumnStyle}" />
		<Setter Property="hc:DataGridAttach.ComboBoxColumnStyle" Value="{StaticResource DataGridComboBoxColumnStyle}" />
		<Setter Property="hc:DataGridAttach.EditingComboBoxColumnStyle" Value="{StaticResource DataGridEditingComboBoxColumnStyle}" />
		<Setter Property="hc:DataGridAttach.CheckBoxColumnStyle" Value="{StaticResource CheckBoxBaseStyle}" />
		<Setter Property="hc:DataGridAttach.EditingCheckBoxColumnStyle" Value="{StaticResource CheckBoxBaseStyle}" />
		<Setter Property="hc:DataGridAttach.ApplyDefaultStyle" Value="True" />
		<Setter Property="hc:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="StoryboardMouseEnter">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
								<EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
								<EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="StoryboardMouseLeave">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
								<EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
								<EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<hc:ScrollViewer Name="DG_ScrollViewer" IsInertiaEnabled="{TemplateBinding hc:ScrollViewer.IsInertiaEnabled}" Focusable="false">
							<hc:ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<ControlTemplate.Triggers>
										<EventTrigger RoutedEvent="MouseEnter">
											<BeginStoryboard Storyboard="{StaticResource StoryboardMouseEnter}" />
										</EventTrigger>
										<EventTrigger RoutedEvent="MouseLeave">
											<BeginStoryboard Storyboard="{StaticResource StoryboardMouseLeave}" />
										</EventTrigger>
									</ControlTemplate.Triggers>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="1" Visibility="{Binding HeadersVisibility , ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
										<ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
										<ScrollBar Name="PART_VerticalScrollBar" Style="{StaticResource ScrollBarBaseStyle}" Opacity="0" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset , Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
										<ScrollBar Name="PART_HorizontalScrollBar" Style="{StaticResource ScrollBarBaseStyle}" Opacity="0" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset , Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
									</Grid>
								</ControlTemplate>
							</hc:ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</hc:ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="AlbumListBoxItemTemplate" DataType="ListBoxItem">
		<Grid HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Border Width="200" Height="200" CornerRadius="8" Background="LightGray" VerticalAlignment="Top">
				<Grid>
					<TextBlock FontFamily="{StaticResource IconFont}" FontSize="80" FontWeight="ExtraBold" Text="" Foreground="#33000000" HorizontalAlignment="Center" VerticalAlignment="Center" />
				</Grid>
			</Border>
			<Image Width="200" Height="200" Source="{Binding LocalPicUrl}" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top">
				<Image.Clip>
					<RectangleGeometry RadiusX="8" RadiusY="8" Rect="0,0,200,200" />
				</Image.Clip>
			</Image>
			<StackPanel Grid.Column="1" Margin="20 0 0 0" HorizontalAlignment="Stretch">
				<TextBlock Text="{Binding Title}" FontWeight="Bold" FontSize="16" />
				<DockPanel LastChildFill="False">
					<TextBlock Foreground="{DynamicResource SecondaryTextBrush}" VerticalAlignment="Center">
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0}·{1}">
								<Binding Path="Type" />
								<Binding Path="PublishTime" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</DockPanel>
				<ListBox ItemsSource="{Binding Musics}" Style="{StaticResource FlatListBoxStyle}" ItemTemplate="{StaticResource MusicListBoxItemTemplate}" ItemContainerStyle="{StaticResource MusicListBoxItemContainerStyle}" />
			</StackPanel>
		</Grid>
	</DataTemplate>
	<Style x:Key="AlbumListBoxStyle" BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource AlbumListBoxItemContainerStyle}" />
		<Setter Property="ItemTemplate" Value="{StaticResource AlbumListBoxItemTemplate}" />
		<Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="True" />
		<Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
	</Style>
</ResourceDictionary>