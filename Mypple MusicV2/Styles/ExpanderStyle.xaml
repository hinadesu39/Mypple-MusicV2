<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">
    <FontFamily x:Key="IconFont">pack://application:,,,/Mypple MusicV2;component/Resources/#iconfont</FontFamily>
    <Style x:Key="PlayListToggleButtonCustom"
           BasedOn="{StaticResource BaseStyle}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Chrome"
                            SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <hc:SimplePanel>
                            <ContentPresenter Name="UnCheckedElement"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter Name="CheckedElement"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed"
                                              Content="{Binding Path=(hc:StatusSwitchElement.CheckedElement), RelativeSource={RelativeSource TemplatedParent}}" />
                        </hc:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value=".9" />
                        </Trigger>-->
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter
                                    Property="Background"
                                    Value="{DynamicResource SecondaryRegionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value=".6" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter TargetName="CheckedElement"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="hc:StatusSwitchElement.HideUncheckedElement"
                                           Value="True" />
                                <Condition Property="ToggleButton.IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="UnCheckedElement"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="PlayListExpanderDownTemplate"
                     TargetType="Expander">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="ToggleButton"
                          hc:BorderElement.CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Stretch"
                          Focusable="False"
                          Padding="10,0,0,0"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          
                          Foreground="{TemplateBinding Foreground}"
                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          MinHeight="{TemplateBinding MinHeight}"
                          Style="{StaticResource PlayListToggleButtonCustom}">
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{TemplateBinding Tag}"
                                   FontFamily="{StaticResource IconFont}"
                                   FontSize="18"
                                   Margin="10" />
                        <ContentPresenter ContentSource="Header"
                                          Margin="10"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </StackPanel>

                    <Path Name="PathArrow"
                          IsHitTestVisible="False"
                          Grid.Column="1"
                          Stretch="Uniform"
                          Fill="{TemplateBinding Foreground}"
                          Data="{StaticResource DownGeometry}"
                          Width="12"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalAlignment="Center" />
                </Grid>
            </ToggleButton>
            <ContentPresenter Name="ExpandSite"
                              Visibility="Collapsed"
                              Grid.Row="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                     Value="true">
                <Setter Property="hc:BorderElement.CornerRadius"
                        TargetName="ToggleButton"
                        Value="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusSplitConverter}, ConverterParameter='1,1,0,0'}" />
                <Setter Property="Visibility"
                        TargetName="ExpandSite"
                        Value="Visible" />
                <Setter Property="Data"
                        TargetName="PathArrow"
                        Value="{StaticResource UpGeometry}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value=".4" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="PlayListExpanderStyle"
           TargetType="Expander">
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="MinHeight"
                Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="MinWidth"
                Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Template"
                Value="{StaticResource PlayListExpanderDownTemplate}" />
    </Style>
</ResourceDictionary>