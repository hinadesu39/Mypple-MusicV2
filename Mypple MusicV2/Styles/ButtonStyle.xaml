<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">
    <FontFamily x:Key="IconFont">pack://application:,,,/Mypple MusicV2;component/Resources/#iconfont</FontFamily>
    <Style x:Key="FlatIconButtonStyle"
           TargetType="Button">
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <Setter Property="FontFamily"
                Value="{StaticResource IconFont}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#33000000" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="#44000000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FlatTextButtonStyle"
           TargetType="Button">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="FontSize"
                Value="22" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <Setter Property="FontFamily"
                Value="{StaticResource IconFont}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <DockPanel LastChildFill="False">
                            <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                            <TextBlock Text="&#xe620;"
                                       DockPanel.Dock="Right"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       FontWeight="Thin"
                                       Foreground="{DynamicResource SecondaryTextBrush}" />
                        </DockPanel>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatCornerButtonStyle"
           TargetType="Button">
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <Setter Property="FontFamily"
                Value="{StaticResource IconFont}" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Background"
                Value="#33000000" />
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="80" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="#44000000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GoBackButtonStyle"
           TargetType="Button">
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="ToolTip"
                Value="返回" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <Setter Property="FontFamily"
                Value="{StaticResource IconFont}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="{DynamicResource DefaultCornerRadius}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="&#xe65c;"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#33000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="#44000000" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="Padding"
                                                From="15 0 0 0"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <QuadraticEase  EasingMode="EaseInOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>